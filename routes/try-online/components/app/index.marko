import app from '~/routes/try-online/app';
import localStorageUtil from '~/util/localstorage';

class {
    onMount() {
        const DEFAULT_FOCUSED_FILE = '/get-started';

        // The directory tree is serialized down from the server
        // as part of the state for this component. We want our
        // singleton application instance to have access to the
        // application state
        app.initialize(this.input);

        app.onStateChange((newState) => {
            this.input = newState;
        });

        const localStorageFocusedFile = localStorageUtil.get('focusedFile');

        if (localStorageFocusedFile && app.fileExists(localStorageFocusedFile)) {
            app.focusFile(localStorageFocusedFile);
        } else {
            app.focusFile(DEFAULT_FOCUSED_FILE);
        }

        this.focusedFile = null;
    }

    onUpdate() {
        if (this.input.focusedFile !== this.focusedFile) {
            this.focusedFile = this.input.focusedFile;
            app.emit('focus:change', this.input.focusedFile);
        }
    }

    handleCollapseToggle(paneName, event) {
        var isCollapsed = event.isCollapsed;
        var paneContainerEl = this.getEl(`pane-container-${paneName}`);
        if (isCollapsed) {
            paneContainerEl.classList.add('collapsed');
        } else {
            paneContainerEl.classList.remove('collapsed');
        }
    }
}

$ var panes = input.panes;
$ var visibleTabsByPane = input.visibleTabsByPane;
$ var rootDir = input.activeProject && input.activeProject.rootDir;

<macro renderPane(paneName, collapseDirection)>
    <div.pane-container key="pane-container-${paneName}" class=paneName if(panes[paneName].length)>
        <pane files=panes[paneName]
            focused-file=input.focusedFile
            focused-directory=input.focusedDirectory/>

        <if(collapseDirection)>
            <collapse-icon direction=collapseDirection
                 key="pane-collapse-${paneName}"
                on-toggle('handleCollapseToggle', paneName)/>
        </if>
    </div>
</macro>

<div.try-online>
    <div.workspace>
        <div.tree-view-container>
            <project-nav(input)/>
            <tree-view root-dir=rootDir if(rootDir) />
        </div>
        <div.divider></div>
        <div.editors-container>
            <div.inputs-container>
                <div.divider></div>
                <renderPane('inputTop', 'up')/>
                <div.divider if(panes['inputTop'].length && panes['inputBottom'].length)></div>
                <renderPane('inputBottom', 'down')/>
                <div.divider></div>
            </div>
            <div.divider></div>
            <div.outputs-container>
                <div.divider></div>
                <renderPane('outputTop', 'up')/>
                <div.divider if(panes['outputTop'].length && panes['outputBottom'].length)></div>
                <renderPane('outputBottom', 'down')/>
                <div.divider></div>
            </div>
        </div>
    </div>
</div>
