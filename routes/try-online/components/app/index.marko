import app from '~/routes/try-online/app';

class {
    onInput(input) {
        this.state = input.state;
        this.state.unmounted = true;
    }

    onMount() {
        // The directory tree is serialized down from the server
        // as part of the state for this component. We want our
        // singleton application instance to have access to the
        // application state
        app.initialize(this.state);

        app.onStateChange((newState) => {
            this.state = newState;
        });

        app.focusFile('/get-started');

        this.state.unmounted = false;
    }
}

var panes = state.panes;
var visibleTabsByPane = state.visibleTabsByPane;

<macro renderPane(paneName)>
    <div class=paneName if(panes[paneName].length)>
        <pane files=panes[paneName] focused-file=state.focusedFile/>
    </div>
</macro>

<div.try-online>
    <try-loader if(state.unmounted)/>
    <div.workspace>
        <div.tree-view-container>
            <tree-view root-dir=state.rootDir
                focused-file=state.focusedFile
                focused-directory=state.focusedDirectory/>
        </div>
        <div.divider></div>
        <div.editors-container>
            <div.inputs-container>
                <div.divider></div>
                <renderPane('inputTop')/>
                <div.divider if(panes['inputTop'].length && panes['inputBottom'].length)></div>
                <renderPane('inputBottom')/>
                <div.divider></div>
            </div>
            <div.divider></div>
            <div.outputs-container>
                <div.divider></div>
                <renderPane('outputTop')/>
                <div.divider if(panes['outputTop'].length && panes['outputBottom'].length)></div>
                <renderPane('outputBottom')/>
                <div.divider></div>
            </div>
        </div>
    </div>
</div>